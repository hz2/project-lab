{
	"new vue": {
		"prefix": "nv",
		"body": [
			"<template>\n  <div>\n    <div class=\"flexhead\">\n      <div class=\"headbtn back\" @click=\"$$router.go(-1)\"><img src=\"~assets/ChainStore/back.png\" alt=\"\"></div>\n      <div>${1:标题}</div>\n      <div class=\"headbtn hidden\">按钮</div>\n    </div>\n    <div  v-if=\"nodata\" class=\"nodata-container\">\n      <div>{{$$t('no data')}}</div>\n    </div>\n\n  </div>\n</template>\n<style scoped lang=\"less\">\n</style>\n<style lang=\"less\">\n@import \"~assets/css/style.less\";\n</style>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  computed: {\n    ...mapGetters([\n      \"chains_key\",\n      \"store_key\",\n      \"user_id\",\n      \"user\"\n    ])\n  },\n  mounted() {\n    // this.gettable();\n  },\n  data() {\n    return {\n      nodata: true // 无数据\n    };\n  },\n  watch: {\n    // check: function(val, oldVal) { },\n  },\n  methods: {\n    btn() {\n        console.log('btn');        \n    },\n  }};\n</script>\n"
		],
		"description": "新建文件"
	},
	"style.less": {
		"prefix": "less",
		"body": [
			"<style lang=\"less\">\n@import \"~assets/css/style.less\";\n</style>"
		],
		"description": "自定义的 less"
	},
	"成功": {
		"prefix": "msgs",
		"body": [
			"this.$$toast('$1', 'success');"
		],
		"description": "成功 提示"
	},
	"失败": {
		"prefix": "msgf",
		"body": [
			"this.$$toast('$1', 'cancel');"
		],
		"description": "失败 提示"
	},
	"警告": {
		"prefix": "msgw",
		"body": [
			"this.$$toast('$1', 'warn');"
		],
		"description": "警告 提示"
	},
	"文本": {
		"prefix": "msg",
		"body": [
			"this.$$toast('$1', 'text');"
		],
		"description": "文本 提示"
	},
	"Generate repackel page": {
		"prefix": "repackelPage",
		"body": [
			"<template>",
			"\t\t<div class=\"cp-page ${1:pageName}\">",
				"\t\t\t\t<rl-table :cfg=\"cfg\" ref=\"$1\"></rl-table>",
			"\t\t</div>",
		"</template>",
		"",
		"<script>",
		"import { Table } from \"@repackel/repack\";",
		"export default {",
		  "\tname: \"$1\",",
		  "\tcomponents: {",
			"\t\t[Table.name]: Table",
		  "\t},",
		  "\tdata() {",
			"\t\treturn {",
			  "\t\t\tcfg: {",
				"\t\t\t\trightName: \"$1\",",
				"\t\t\t\tactionAlign: \"right\",",
				"\t\t\t\tactionList: [",
				  "\t\t\t\t\t{",
					"\t\t\t\t\t\tname: \"新增\",",
					"\t\t\t\t\t\tfn: () => this.addItem()",
				  "\t\t\t\t\t}",
				"\t\t\t\t],",
				"\t\t\t\tsearchCfg: {",
				  "\t\t\t\t\tqueryBtn: \"2\"",
				"\t\t\t\t},",
				"\t\t\t\tsearchList: [",
				  "\t\t\t\t\t{",
					"\t\t\t\t\t\tname: \"关键词\",",
					"\t\t\t\t\t\ttype: \"input\",",
					"\t\t\t\t\t\tkey: \"content\"",
				  "\t\t\t\t\t}",
				"\t\t\t\t],",
				"\t\t\t\tsearchFn: this.getList,",
				"\t\t\t\ttableList: [",
				  "\t\t\t\t\t{",
					"\t\t\t\t\t\tlabel: \"标题\",",
					"\t\t\t\t\t\tprop: \"title\",",
					"\t\t\t\t\t\tminWidth: \"180\"",
				  "\t\t\t\t\t},",
				  "\t\t\t\t\t{",
					"\t\t\t\t\t\ttemp: true,",
					"\t\t\t\t\t\tlabel: \"操作\",",
					"\t\t\t\t\t\twidth: \"180\",",
					"\t\t\t\t\t\tbuttonList: [",
					  "\t\t\t\t\t\t\t{",
						"\t\t\t\t\t\t\t\ttext: \"删除\",",
						"\t\t\t\t\t\t\t\tfn: row => this.rmItem(row.id)",
					  "\t\t\t\t\t\t\t}",
					"\t\t\t\t\t\t]",
				  "\t\t\t\t\t}",
				"\t\t\t\t],",
			  "\t\t\t}",
			"\t\t};",
		  "\t},",
		  "\tmethods: {",
			"\t\tgetList(p, reset) {",
			  "\t\t\tlet p2 = {",
				"\t\t\t\t...p",
			  "\t\t\t};",
			  "\t\t\treturn new Promise((resolve, reject) => {",
				"\t\t\t\tthis.$$req(\"/get/list\", {",
				  "\t\t\t\t\tmethod: \"GET\",",
				  "\t\t\t\t\tparams: p2",
				"\t\t\t\t})",
				  "\t\t\t\t\t.then(res => {",
					"\t\t\t\t\t\tresolve({",
					  "\t\t\t\t\t\t\tlist: res.rows,",
					  "\t\t\t\t\t\t\ttotal: res.total",
					"\t\t\t\t\t\t});",
				  "\t\t\t\t\t})",
				  "\t\t\t\t\t.catch(e => reject(e));",
			  "\t\t\t});",
			"\t\t},",
			"\t\taddItem() {},",
			"\t\trmItem() {}",
		  "\t}",
		"};",
		"</script>",
		""
		],
		"description": "make a page use repackel"
	}
	
}

